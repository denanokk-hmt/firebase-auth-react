{"version":3,"sources":["utils/getParam.js","firebase.js","utils/cookie.js","utils/axios.js","utils/staffs.js","actions/auth.js","reducers/auth.js","actions/send_email.js","reducers/send_email.js","reducers/index.js","components/Image.js","components/Text.js","components/Title.js","components/Logout.js","components/GoogleAuth.js","components/renderTextField.js","components/EmailAuth.js","components/Circular.js","components/App.js","components/SendEmail.js","components/ForgotPw.js","reportWebVitals.js","index.js"],"names":["getParam","name","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_FB_MEASUREMENT_ID","firebase","initializeApp","cookies","Cookies","setToken","token","set","path","secure","sameSite","maxAge","postRequest","method","params","callback","a","axios","headers","data","then","response","catch","err","console","log","JSON","stringify","loginStaff","client","currentUser","getIdToken","idToken","putLogin","staff","status_code","props","delete","staffsUrl","version","status_msg","Error","LOGIN_NG","LOGIN_OK","LOGIN_READY","LOGIN_NOW","reflogin","staff_token","dispatch","auth","onAuthStateChanged","user","values","displayName","email","uid","provider","providerData","providerId","result","dispatcher","logout","parent","postMessage","login","type","payload","signOut","initialState","message","circulerOpen","switchEvents","state","action","Object","assign","SEND_EMAIL_READY","SEND_EMAIL_SENDING","SEND_EMAIL_SENT","SEND_EMAIL_ERR","send_flg","send_msg","combineReducers","send_email","form","Image","id","tag","classname","className","src","alt","useStyles","makeStyles","root","margin","padding","background","border","borderRadius","color","fontSize","height","width","align","textAlign","message1","space","Text","text","styleClass","classes","fontWeight","Title","title","msg","Logout","Button","onClick","help","marginTop","fill","position","GoogleAuth","googleLogin","HelpOutline","effect","place","withStyles","theme","textField","input","meta","touched","error","custom","helperText","TextField","EmailAuth","disabled","pristine","valid","Field","label","component","renderTextField","Circular","open","this","progressMsg","Backdrop","backdrop","CircularProgress","string","React","PureComponent","connect","zIndex","drawer","App","onSubmitLogin","bind","emailLogin","handleSubmit","Fragment","onSubmit","autoComplete","to","Component","mapDispatchToProps","GoogleAuthProvider","signInWithPopup","signInWithEmailAndPassword","password","code","reduxForm","validate","errors","SendEmail","ForgotPw","onSubmitSendEmail","sendEmailReady","sendEmail","return_url","actionCodeSettings","sendPasswordResetEmail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","exact","document","getElementById"],"mappings":"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","file":"static/js/main.f41fa702.chunk.js","sourcesContent":["\n/**\n * Get the URL parameter value\n *\n * @param  name {string} パラメータのキー文字列\n */\n const getParam = (name) => {\n  const url = window.location.href;\n  name = name.replace(/[[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport {\n  getParam,\n}","import firebase from \"firebase/app\";\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  authDomain: process.env.REACT_APP_FB_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FB_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FB_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FB_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FB_APP_ID,\n  measurementId: process.env.REACT_APP_FB_MEASUREMENT_ID\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase","\nimport Cookies from 'universal-cookie';\n\n\nconst cookies = new Cookies();\n\nconst setToken = token => {\n  const options = {\n    path: process.env.REACT_APP_WEP_AUTH_DOMAIN,\n    secure: process.env.NODE_ENV === \"production\",\n    sameSite: process.env.NODE_ENV === \"production\",\n    maxAge: 60 * 60 * 24 * 7, // 1week,\n  };  \n  cookies.set('staff_token', token, options); \n  return token\n}\n\nconst getToken = name => {\n  const token = cookies.get(name);\n  return token\n}\n\nconst deleteToken = name =>{\n  const options = {\n    maxAge: 0,\n  }; \n  cookies.set(name, '', options); \n}\n\nexport {\n  setToken,\n  getToken,\n  deleteToken,\n}","\nimport axios from 'axios'\nimport qs from 'qs';\n\n\n/**\n * Get method http request \n * Need response return status_code, answer(contents of response)\n * @param {text} url\n * @param {object} params\n * @param {func} callback -->no func, return response data \n */\nconst getRequest = async (url, params, callback) => {\n  return await axios({\n    url: url, \n    params,\n    headers: { 'Content-Type': 'Accept: application/json',}\n  }).then(response => {\n    return (callback)? callback(response) : response\n  }).catch(err => {\n    throw err\n  })\n};\n\n/**\n * Get method http request with additional Headers\n * Need response return status_code, answer(contents of response)\n * @param {text} url\n * @param {object} params\n * @param {Object} headers\n * @param {func} callback -->no func, return response data\n */\nconst getRequestWithHeaders = async (url, params, headers, callback) => {\n  return await axios({\n    url: url,\n    params,\n    headers: {\n      \"Accept\": \"application/json\",\n      'Content-Type': 'application/json',\n      ...headers\n    }\n  }).then(response => {\n    return (callback)? callback(response) : response\n  }).catch(err => {\n    throw err\n  })\n};\n\n/**\n * Get method http request with parameter serializer\n * Need response return status_code, answer(contents of response)\n * @param {text} url\n * @param {object} params\n * @param {func} callback -->no func, return response data \n */\nconst getRequestSLZ = async (url, params, callback) => {\n  return await axios({\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json', 'Accept': 'application/json',},\n    url: url,\n    params,\n    paramsSerializer: function (params) {\n      return qs.stringify(params, {arrayFormat: 'indices'})\n    },  \n  }).then(response => {\n    return (callback)? callback(response) : response\n  }).catch(err => {\n    throw err\n  })\n};\n\n/**\n * POST or PUT request with JSON body or URL String.\n * @param {text} method --> POST ot PUT\n * @param {text} url\n * @param {object} params\n * @param {func} callback -->no func, return response data \n */\nconst postRequest = async (method, url, params, callback) => {\n  return await axios({\n    method: method,\n    url: url,\n    headers: {\n      \"Accept\": \"application/json\",\n      'Content-Type': 'application/json',\n    },\n    data: params,\n  }).then(response => {\n    return (callback)? callback(response) : response\n  }).catch(err => {\n    console.log(JSON.stringify(err))\n    throw err\n  })\n}\n\n/**\n * POST or PUT request with JSON body or URL String.\n * @param {string} url\n * @param {string|Object} data\n * @param {string|Object} options\n */\nconst postRequestWithOptions = async (method, url, data, options, callback) => {\n  return await axios({\n    method: method,\n    url: url,\n    data: data,\n    params: options?.qs || {},\n    headers: options?.headers || {},\n  }).then(response => {\n    callback(response)\n  }).catch(err => {\n    console.log(JSON.stringify(err))\n    throw new Error(err)\n  })\n}\n\n/**\n * POST or PUT request with additional Headers\n * @param {text} method --> POST ot PUT\n * @param {string} url\n * @param {string|Object} params\n * @param {Object} headers\n * @param {func} callback -->no func, return response data \n */\nconst postRequestWithHeaders = async (method, url, params, headers, callback) => {\n  return await axios({\n    method: method,\n    url: url,\n    headers: {\n      \"Accept\": \"application/json\",\n      'Content-Type': 'application/json',\n      ...headers\n    },\n    data: params,\n  }).then(response => {\n    return (callback)? callback(response) : response\n  }).catch(err => {\n    console.log(JSON.stringify(err))\n    throw err\n  })\n}\n\nexport {\n  getRequest,\n  getRequestWithHeaders,\n  getRequestSLZ,\n  postRequest,\n  postRequestWithOptions,\n  postRequestWithHeaders,\n}","\nimport { postRequest } from './axios'\nimport { setToken } from './cookie';\n\n/**\n * Call Staffs login API\n * @param {*} client \n * @param {*} currentUser \n * @returns \n */\n async function loginStaff(client, currentUser) {\n  try {\n    //FBから認証用のidTokenを取得\n    const idToken = await currentUser.getIdToken(/* forceRefresh */ true)\n    .then(idToken => {\n      // Send token to your backend via HTTPS\n      return idToken\n    })\n    \n    //console.log(\"ACTION:GOOGLE AUTH::USER\",user)\n\n    //Staffs login\n    const staff = await putLogin({client, idToken})\n    \n    //Staff登録を判定\n    if (staff?.status_code === 0) {\n\n      //Staffに登録済は、staff_tokenをCookieに登録\n      setToken(staff.props.token)\n\n      //refloginにstaff tokenを渡す\n      return staff.props.token\n\n    } else if (staff?.status_code === 212) {\n      //Staffに未登録(212)は、FBのAuthユーザーを削除\n      await currentUser.delete()\n    }\n  } catch(err) {\n    throw err\n  }\n}\n\n/**\n * Staffsにログイン、自分のstaff情報を取得、更新tokenを取得\n * @param {string} client\n * @param {string} idToken\n * @returns \n */\nconst putLogin = async ({client, idToken}) => {\n  //Request settings\n  const staffsDomain = process.env.REACT_APP_STAFFS_DOAMIN\n  const staffsUrl = `${staffsDomain}hmt/put/login`\n  const params = {\n    version: process.env.REACT_APP_VERSION,\n    client: client,\n    idToken: idToken,\n  }\n\n  //Put login, getting own staff data.\n  return await postRequest(\"PUT\", staffsUrl, params, response => {\n  //return await postRequestWithHeaders(\"PUT\", staffsUrl, params, headers, response => {\n\n    //レスポンスデータがなければ即座にエラー\n    //レスポンスデータがある場合、ステータスが0-->戻り値を戻す\n    //レスポンスデータがある場合、ステータスが0以外、エラー判定結果を戻す\n    if (response.data) {\n      switch(response.data?.status_code) {\n        case 0:\n          return response.data\n        default:\n          return {\n            status_code: response.data.status_code,\n            status_msg: response.data.status_msg\n          }\n      }\n    } else {\n      throw Error(`put log error. ${response}`)\n    }\n  })\n  .catch(err => {\n    throw err\n  })\n}\n\nexport {\n  loginStaff,\n  putLogin,\n}","\nimport firebase from '../firebase'\nimport { getParam } from '../utils/getParam'\nimport { deleteToken } from '../utils/cookie';\nimport { loginStaff } from '../utils/staffs'\n\nexport const LOGIN_NG= 'LOGIN_NG'\nexport const LOGIN_OK = 'LOGIN_OK'\nexport const LOGIN_READY = 'LOGIN_READY'\nexport const LOGIN_NOW = 'LOGIN_NOW'\n\n\n/**\n * Get login firebase user\n * @returns \n */\nexport const reflogin = (staff_token) => async dispatch => {\n  //console.log(\"ACTION::Ref login:::staff_token\", staff_token)\n  let dispatcher\n  let result\n\n  try {\n    //現在ログインしているユーザー情報の取得\n    await firebase.auth().onAuthStateChanged(user => {\n      const values = {\n        displayName: user?.displayName,\n        email: user?.email,\n        uid: user?.uid,\n        provider: user?.providerData[0]?.providerId,\n      }\n      result = values\n      return result\n    })\n\n    if (!result) {\n      //dispatch logout\n      dispatcher = logout()\n    } else {\n      //認証済みの場合は、トークンを返す\n      //exp. localstorageを消したが、GoogleAccountの認証が残っていた場合等\n      const client = getParam('client')\n      const currentUser = await firebase.auth().currentUser\n      if (!staff_token && currentUser) staff_token = await loginStaff(client, currentUser)\n\n      //clinet側にスタッフのtokenを送信\n      //console.log(\"POST MESSAGE STAFF_TOKEN\", staff_token)\n      window.parent.postMessage(staff_token, '*');\n\n      //dispatch login ok\n      dispatcher = login(result)\n    }\n\n  } catch(err) {\n    //console.log(\"REF LOGIN ERROR\", err)\n    dispatcher = ({ type: LOGIN_NG,})\n  } finally {\n    dispatch(dispatcher)\n  }\n}\n\n/**\n * Login\n * @returns \n */\n export const login = (user) => async dispatch => {\n  //console.log(\"ACION::Do login\", user)\n  try {\n    if (user.uid) {\n      dispatch({\n        type: LOGIN_OK,\n        payload: {\n          displayName: user.displayName,\n          email: user.email,\n          uid: user.uid,\n          provider: user.provider,\n        }\n      })\n    } else {\n      dispatch({ \n        type: LOGIN_READY,\n        payload: null,\n      })\n    }\n  } catch(err) {\n    throw Error(err)\n  }  \n}\n\n/**\n * Logout\n * @returns \n */\nexport const logout = () => async dispatch => {\n  //console.log(\"ACTION::Do logout\")\n  try {\n    //Firebase ログアウト\n    await firebase.auth().signOut()\n\n    //Delete token cookie\n    deleteToken('staff_token')\n\n    //Login ready dispatch\n    dispatch({ \n      type: LOGIN_READY,\n      payload: null,\n    })\n  } catch(err) {\n    throw Error(err)\n  }\n}\n\n/**\n * Google provider login\n * usecase\n * 1. GoogleAccountエラー::エラー(logoutをディスパッチ)\n * 2. GoogleAccountあり、FBにuserなし、Staffs登録なし::エラー(logoutをディスパッチ)\n * 3. GoogleAccountあり、FBにuserなし、Staffs登録あり→初回、成功、FBのuser自動作成(refloginをディスパッチ)\n * 4. GoogleAccountあり、FBにuserあり、Staffs登録あり→成功(refloginをディスパッチ)\n * @returns \n */\nexport const googleLogin = () => async dispatch => {\n  //console.log(\"ACTION::Do Google login\")\n\n  //クエリパラメーターからclientを取得\n  const client = getParam('client')\n\n  //ログアウトをデフォルトディスパッチャーとして準備\n  let dispatcher = logout()\n\n  try {\n    //ログイン中。。。\n    await dispatch({\n      type: LOGIN_NOW,\n      payload: null,\n    })\n\n    //Googleアカウントで認証するポップアップを出してログイン\n    const provider = new firebase.auth.GoogleAuthProvider()\n    const user = await firebase.auth().signInWithPopup(provider)\n    .then(response => {\n      return response.user\n    })\n\n    //Staffs login処理()\n    //(注意:Staffに登録がなくてもFB認証でFBのAuthユーザーは自動作成される)\n    if (user) {\n\n      //Staffsにログイン\n      await loginStaff(client, firebase.auth().currentUser, dispatcher)\n      .then(staff_token => {\n        if (staff_token) {\n          dispatcher = reflogin(staff_token)\n        } else {\n          throw Error('staffs login ng.')\n        }\n      })\n    }\n  } catch(err) {\n    //console.log(\"GOOGLE LOGIN ERROR\", err)\n    dispatcher = ({ type: LOGIN_NG,})\n  } finally {\n    dispatch(dispatcher)\n  }\n}\n\n/**\n * Email & Pw login\n * @param {*} values \n * @returns \n */\nexport const emailLogin = values => async dispatch => {\n  //console.log(\"ACTION::EMAIL-LOGIN::VALUES\", values)\n\n  //クエリパラメーターからclientを取得\n  const client = getParam('client')\n\n  //ログアウトをデフォルトディスパッチャーとして準備\n  let dispatcher = logout()\n\n  try {\n    //ログイン中。。。\n    await dispatch({\n      type: LOGIN_NOW,\n      payload: null,\n    })\n\n    //Email&PwでFirebase認証を行う\n    //Staffsでスタッフを登録時に、Firebaseのユーザーは作成されるが前提\n    const user = await firebase.auth().signInWithEmailAndPassword(values.email, values.password)\n    .then(async response => {\n      return response.user\n    })\n    .catch(err => {\n      if (err.code === \"auth/user-not-found\") {\n        throw Error(err.code)\n      } else if (err.code === \"auth/wrong-password\") {\n        throw Error(err.code)\n      } else {\n        //その他のエラー\n        throw err\n      }\n    })\n    if (!user) throw Error('firebase login ng.')\n\n    //Staffs login\n    await loginStaff(client, firebase.auth().currentUser, dispatcher)\n    .then(staff_token => {\n      dispatcher = reflogin(staff_token)\n    })\n    .catch(err => {\n      throw err\n    })\n\n  } catch(err) {\n    //console.log(\"EMAIL&PW LOGIN ERROR\",err)\n    dispatcher = ({ type: LOGIN_NG,})\n  } finally {\n    dispatch(dispatcher)\n  }\n}","\nimport { getParam } from '../utils/getParam'\nimport { LOGIN_NG, LOGIN_OK, LOGIN_READY, LOGIN_NOW } from \"../actions/auth\";\n\nconst initialState = {\n  location: window.location.href,\n  client: getParam('client', window.location.href),\n  uid: '',\n  displayName: '',\n  email: '',\n  provider: '',\n  message: 'こんにちは。',\n  circulerOpen: false\n}\n\nconst switchEvents = (state=initialState, action) => {\n\n  switch (action.type) {\n\n    case LOGIN_NOW: {\n      return Object.assign({}, state, {\n        uid: '',\n        displayName: '',\n        email: '',\n        provider: '',\n        message: 'ログイン中。。。',\n        circulerOpen: true\n      })\n    }\n\n    case LOGIN_READY: {\n      return Object.assign({}, state, {\n        uid: '',\n        displayName: '',\n        email: '',\n        provider: '',\n        message: 'ログインしてください。',\n        circulerOpen: false\n      })\n    }\n\n    case LOGIN_OK: {\n      return Object.assign({}, state, {\n        uid: action.payload.uid,\n        displayName: action.payload.displayName,\n        email: action.payload.email,\n        provider: action.payload.provider,\n        message: `ようこそ : ${action.payload.email}`,\n        circulerOpen: false\n      })\n    }\n\n    case LOGIN_NG: {\n      return Object.assign({}, state, {\n        uid: '',\n        displayName: '',\n        email: '',\n        provider: '',\n        message: 'ログインに失敗しました。',\n        circulerOpen: false\n      })\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport default switchEvents","\nimport firebase from '../firebase'\nimport { getParam } from '../utils/getParam'\n\nexport const SEND_EMAIL_READY = 'SEND_EMAIL_READY'\nexport const SEND_EMAIL_SENDING = 'SEND_EMAIL_SENDING'\nexport const SEND_EMAIL_SENT = 'SEND_EMAIL_SENT'\nexport const SEND_EMAIL_ERR = 'SEND_EMAIL_ERR'\n\n\n/**\n * パスワード忘れ画面の初期表示\n * @param {text} email\n * @param {boolean} send\n * @returns \n */\nexport const sendEmailReady = () => async dispatch => {\n  let dispatcher\n  try {\n    dispatcher = { \n      type: SEND_EMAIL_READY,\n      payload: {}\n    }\n  } catch(err) {\n    console.log(err)\n  } finally {\n    dispatch(dispatcher)\n  }\n}\n\n/**\n * パスワード忘れパスワード登録メール送信\n * @param {text} email\n * @param {boolean} send\n * @returns \n */\nexport const sendEmail = email => async dispatch => {\n  //console.log(\"ACTION::SEND EMAIL\", email)\n\n  //クエリパラメーターからclientを取得\n  const client = getParam('client')\n\n  let dispatcher\n\n  try {\n    //ログイン中。。。\n    await dispatch({\n      type: SEND_EMAIL_SENDING,\n      payload: null,\n    })\n\n    //メールに貼られたリンクを踏むと、FBの再設定画面に飛ぶ\n    //パスワードを再設定すると、actionCodeSettingsで指定したURLに画面遷移\n    const return_url = `${process.env.REACT_APP_CWC_DOMAIN}${client}/index.html`\n    const actionCodeSettings = {\n      url: return_url\n    };\n\n    //パスワードリセットリンクメールを送信する\n    await firebase.auth().sendPasswordResetEmail(email, actionCodeSettings)\n    .then(() => {\n      return {\n        msg: \"Password reset email sent!\",\n      }\n    })\n    .catch((error) => {\n      throw error\n    });\n\n    dispatcher = { \n      type: SEND_EMAIL_SENT,\n      payload: {\n        email: email,\n        send_flg: true,\n        send_msg: 'パスワード登録メールを送信しました。',\n      }\n    }\n  } catch(err) {\n    //console.log(\"SEND EMAIL ERROR\",err)\n    dispatcher = { \n      type: SEND_EMAIL_ERR,\n      payload: {\n        email: email,\n        send_flg: false,\n        send_msg: 'パスワード登録メールを送信に失敗しました。',\n      }\n    }\n  } finally {\n    //console.log(\"ACTION::DISPATCH\", dispatcher)\n    dispatch(dispatcher)\n  }\n}","\nimport { SEND_EMAIL_READY, SEND_EMAIL_SENDING, SEND_EMAIL_SENT, SEND_EMAIL_ERR } from \"../actions/send_email\";\n\nconst initialState = {\n  email: '',\n  send_flg: false,\n  send_msg: 'パスワード登録メールを送信してください。',\n  circulerOpen: false\n}\n\nconst switchEvents = (state=initialState, action) => {\n\n  //console.log(\"Reducers/sendemail::state\", state)\n  //console.log(\"Reducers/sendemail::action\", action)\n\n  switch (action.type) {\n\n    case SEND_EMAIL_READY: {\n      return initialState\n    }\n    case SEND_EMAIL_SENDING: {\n      return Object.assign({}, state, {\n        email: '',\n        send_flg: false,\n        send_msg: 'パスワード登録メールを送信中。。。',\n        circulerOpen: true\n      })\n    }\n    case SEND_EMAIL_SENT: {\n      return Object.assign({}, state, {\n        email: action.payload.email,\n        send_flg: action.payload.send_flg,\n        send_msg: action.payload.send_msg,\n        circulerOpen: false\n      })\n    }\n    case SEND_EMAIL_ERR: {\n      return Object.assign({}, state, {\n        email: action.payload.email,\n        send_flg: action.payload.send_flg,\n        send_msg: action.payload.send_msg,\n        circulerOpen: false\n      })\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default switchEvents","\nimport { combineReducers } from \"redux\";\nimport { reducer as form } from \"redux-form\"\nimport auth from './auth'\nimport send_email from './send_email'\n\nexport default combineReducers({ auth, send_email, form })","import React from \"react\";\nimport '../css/Image.css';\n\nconst Image = ({id, tag, url}) => {\n  const classname = `disp-img_${tag}`\n  return (\n    <div id={id} className={classname} >\n      <img src={url} alt=\"\" />\n    </div>\n  )\n};\n\nImage.propTypes = {\n};\n\nexport default Image;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '0px 0px 0px',\n    padding: '10px',\n    background: 'none',\n    border: 0,\n    borderRadius: 3,\n    color: 'lightblue',\n    fontSize: '100%',\n    height: 20,\n    width: 'auto',\n    align: \"center\",\n    textAlign: \"center\"\n  },\n  message1 : {\n    margin: '0px 0px 0px',\n    padding: '10px',\n    background: 'none',\n    border: 0,\n    borderRadius: 3,\n    color: '#50b6d8',\n    fontSize: '100%',\n    height: 20,\n    width: 'auto',\n    align: \"center\",\n    textAlign: \"center\"\n  },\n  space: {\n    margin: '0px 0px 0px',\n    padding: '0px',\n    background: 'none',\n    border: 0,\n    borderRadius: 3,\n    color: 'lightblue',\n    fontSize: '50%',\n    height: 10,\n    width: 'auto',\n    align: \"center\",\n    textAlign: \"center\"\n  },\n});\n\nconst Text = ({ text, styleClass=\"root\" }) => {\n  //console.log(\"TEXT::STYLE\", style)\n  const classes = useStyles();\n  return (\n    <div className={classes[styleClass]} >\n      <div>{text}</div>\n    </div>\n  )\n};\n\nText.propTypes = {\n};\n\nexport default Text;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from \"./Image\";\nimport Text from \"./Text\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '0px 0px 0px',\n    padding: '10px',\n    background: 'linear-gradient(0deg, #ffffff 30%, #e6e6fa 90%)',\n    border: 0,\n    borderRadius: 3,\n    //boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: '#93cadc',\n    fontWeight: 500,\n    fontSize: '100%',\n    height: 'auto',\n    width: 'auto',\n    textAlign: \"center\"\n  },\n});\n\nconst Title = ({ title, props, msg}) => {\n  //console.log(\"TITEL PROPS\", props)\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root} >\n      <Text text={title} />\n      <Image id=\"logo3\" tag=\"hmt-logo\" url={process.env.PUBLIC_URL + \"/hmt-log.png\"} />\n      <Text text={msg} styleClass=\"message1\" />\n    </div>\n  )\n};\n\nTitle.propTypes = {\n};\n\nexport default Title;","import React from \"react\";\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '20px 10px 10px',\n    background: 'linear-gradient(45deg, #ffd700 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    //boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 40,\n    width: 300,\n  },\n});\n\nconst Logout = ({ props }) => {\n\n  const classes = useStyles();\n\n  //console.log(this.props)\n  return (\n    <div>\n      <Button className={classes.root} onClick={props.logout} >LOGOUT</Button>\n    </div>\n  )\n};\n\nLogout.propTypes = {\n};\n\nexport default Logout;\n","import React from \"react\";\n//import PropTypes from \"prop-types\";\n\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { HelpOutline } from '@material-ui/icons'\nimport ReactTooltip from 'react-tooltip'\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '20px 10px 10px',\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    //boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 40,\n    width: 300,\n  },\n  help: {\n    marginTop: '10px',\n    fill: 'lightgray',\n    position: 'absolute'\n  }\n});\n\nconst GoogleAuth = ({ props }) => {\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Button className={classes.root} onClick={props.googleLogin} >\n        LOGIN WITH GOOGLE\n      </Button>\n      <span className={classes.help} data-tip=\"Googleアカウント認証を利用して、ログイン\">\n        <HelpOutline className={classes.help} />\n        <ReactTooltip effect=\"float\" type=\"info\" place=\"right\" />\n      </span>\n    </div>\n  )\n};\n\nGoogleAuth.propTypes = {\n};\n\nexport default GoogleAuth;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  textField: {\n    margin: \"0px 20px\",\n    //marginLeft: theme.spacing.unit,\n    //marginRight: theme.spacing.unit,\n    width: 260,\n  },\n});\n\n// TextField\nconst renderTextField = props => {\n  //console.log(\"RENDER_TEXT_FILED:PROPS\", props)\n  const { input, classes, meta: {touched, error}, ...custom } = props;\n  const helperText = (touched && error)? error : ''\n\n  return (\n    <div>\n      <TextField\n        {...input}\n        {...custom}\n        className={classes.textField}\n        helperText={helperText}\n      />\n    </div>\n  );\n}\n\nrenderTextField.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(renderTextField);","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { Field } from \"redux-form\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport renderTextField from './renderTextField'\nimport { HelpOutline } from '@material-ui/icons'\nimport ReactTooltip from 'react-tooltip'\n\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '10px 10px 10px',\n    padding: '1em 3em',\n    background: 'linear-gradient(45deg, #00BFFF 10%, #6495ED 90%)',\n    border: 0,\n    borderRadius: 3,\n    //boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 40,\n    width: 300,\n  },\n  help: {\n    marginTop: '5px',\n    fill: 'lightgray',\n    position: 'absolute',\n  }\n});\n\n\nconst EmailAuth = ({ props }) => {\n\n  const classes = useStyles();\n  //console.log(\"EMAIL AUTH::PROPS*****\", props)\n\n  const disabled = (!props.pristine && props.valid)? false : true\n\n  return (\n    <div>\n      <div>\n        <Field\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          component={renderTextField}\n        />\n      </div>\n      <div>\n        <Field\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          component={renderTextField}\n        />\n      </div>\n      <div>\n        <Button className={classes.root} type=\"submit\" disabled={disabled}>\n          Login with Email & Pw\n        </Button>\n        <span className={classes.help} data-tip=\"Eメールとパスワードで認証して、ログイン\" >\n          <HelpOutline className={classes.help} />\n          <ReactTooltip effect=\"float\" type=\"info\" place=\"right\" />\n        </span>\n      </div>\n    </div>\n  )\n};\n\nEmailAuth.propTypes = {\n};\n\nexport default EmailAuth;","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { Backdrop, CircularProgress } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {},\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  string: {\n    color: '#dbdbdb',\n  }\n})\n\nclass Circular extends React.PureComponent{\n\n  render() {\n\n    const open = this.props.props.circulerOpen\n\n    const progressMsg = this.props.props.progressMsg || 'Login...'\n    return (\n      <div>\n        <Backdrop className={this.props.classes.backdrop} open={open}>\n          <div>\n            <CircularProgress color=\"inherit\" />\n              <p className={this.props.classes.string}>{progressMsg}</p>\n          </div>\n        </Backdrop>\n      </div>\n    )\n  }\n}\n\nexport default connect(state => ({\n}))(withStyles(styles)(Circular))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { reduxForm } from \"redux-form\";\n\nimport '../css/App.css';\n\nimport Title from \"./Title\";\n//import Image from \"./Image\";\nimport Text from \"./Text\";\nimport Logout from \"./Logout\";\nimport GoogleAuth from \"./GoogleAuth\";\nimport EmailAuth from \"./EmailAuth\";\nimport { Link } from \"react-router-dom\"\nimport Circular from './Circular'\n\nimport { reflogin, logout, googleLogin, emailLogin } from '../actions/auth';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.onSubmitLogin= this.onSubmitLogin.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.reflogin()\n  }\n\n  async onSubmitLogin(values) {\n    await this.props.emailLogin(values)\n  }\n\n  render() {\n    const { handleSubmit, pristine } = this.props\n    const props = this.props\n\n    return (\n      <React.Fragment>\n        {/* Circular */}\n        <div><Circular props={props} /></div>\n\n        <div className=\"center-align\">\n          {/* Title */}\n          <Title title=\"Authentication\" props={props} msg={props.message}/>\n          <hr className=\"line_hr_06\" />\n        </div>\n\n        {(!props.uid)? (\n          <div className=\"center-align\">\n          {/* Google */}\n          <GoogleAuth props={props} />\n          <hr className=\"line_hr_06\" />\n\n          {/* OR */}\n          <div className=\"center-align\"><Text text=\"OR\" /></div>\n\n          {/* Email */}\n          <form onSubmit={handleSubmit(this.onSubmitLogin)} autoComplete=\"on\" disabled={pristine}>\n            <EmailAuth props={props} />\n          </form>\n\n          {/* PW forget */}\n          <Text text=\" \" styleClass=\"space\" />\n          <Text text=\" \" styleClass=\"space\" />\n          <Link to={\"/forgot_pw\"} >\n            パスワード忘れ、登録\n          </Link>\n        </div>\n        ) : (\n          <div className=\"center-align\">\n            {/* Logout */}\n            <Logout props={props} />\n          </div>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  //console.log(\"App::state\", state)\n  return {\n    client: state.auth.client,\n    uid: state.auth.uid,\n    displayName: state.auth.displayName,\n    email: state.auth.email,\n    provider: state.auth.provider,\n    message : state.auth.message,\n    circulerOpen : state.auth.circulerOpen\n  }\n}\n\nconst validate = values => {\n  //console.log(\"APP::VALUES\", values)\n  const errors = {}\n  if (!values.email) errors.email = 'Please enter, email.'\n  if (!values.password) errors.password = 'Please enter, password.'\n  return errors\n}\n\nconst mapDispatchToProps = ({ logout, reflogin, googleLogin, emailLogin })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  reduxForm({ validate, form: 'App',})(App)\n);","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { Field } from \"redux-form\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport renderTextField from './renderTextField'\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '10px 10px 10px',\n    padding: '1em 3em',\n    background: 'linear-gradient(45deg, #00BFFF 10%, #6495ED 90%)',\n    border: 0,\n    borderRadius: 3,\n    //boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 40,\n    width: 300,\n  },\n});\n\n\nconst SendEmail = ({ props }) => {\n\n  const classes = useStyles();\n  const disabled = (props.pristine || props.send_flg)? true : false\n\n  return (\n    <div>\n      <div>\n        <Field\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          component={renderTextField}\n        />\n      </div>\n      <div>\n        <Button className={classes.root} type=\"submit\" disabled={disabled} >Send Email</Button>\n      </div>\n    </div>\n  )\n};\n\nSendEmail.propTypes = {\n};\n\nexport default SendEmail;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { reduxForm } from \"redux-form\";\nimport { sendEmail, sendEmailReady } from '../actions/send_email';\n\nimport Title from \"./Title\";\nimport Text from \"./Text\";\nimport SendEmail from './SendEmail';\nimport { Link } from \"react-router-dom\"\n\n\nclass ForgotPw extends Component {\n\n  constructor(props) {\n    super(props)\n    this.onSubmitSendEmail= this.onSubmitSendEmail.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.sendEmailReady()\n  }\n\n  async onSubmitSendEmail(props) {\n    await this.props.sendEmail(props.email)\n  }\n\n  render() {\n    const { handleSubmit, pristine } = this.props\n    const props = this.props\n\n    return (\n      <React.Fragment>        \n        <div className=\"center-align\">\n          {/* Title */}\n          <Title title=\"Authentication\" props={props} msg={props.send_msg}/>\n          <hr className=\"line_hr_06\" />\n          <form onSubmit={handleSubmit(this.onSubmitSendEmail)} autoComplete=\"on\" disabled={pristine}>\n            <SendEmail props={props} errors={props.errors} />\n          </form>\n          {/* to root */}\n          <Text text=\" \" styleClass=\"space\" />\n          <hr className=\"line_hr_06\" />\n          <Text text=\" \" styleClass=\"space\" />\n          <Link to=\"/\">To login</Link>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => { \n  return {\n    email: state.send_email.email,\n    send_flg: state.send_email.send_flg,\n    send_msg: state.send_email.send_msg,\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n  if (!values.email) errors.email = 'Please enter, email.'\n  return errors\n}\n\nconst mapDispatchToProps = ({ sendEmail, sendEmailReady })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  reduxForm({ validate, form: 'ForgotPw',})(ForgotPw)\n);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport './css/index.css';\n\nimport reducer from './reducers'\nimport App from './components/App'\nimport ForgotPw from './components/ForgotPw'\nimport reportWebVitals from './reportWebVitals'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route exact path='/' component={App} />\n        <Route exact path='/forgot_pw' component={ForgotPw} />\n      </Switch>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}